{"version":3,"sources":["api/index.js","components/ValidatePage/ValidateSignup.js","actions/validation.js"],"names":["url","user_url","validate_url","fetchEvents","axios","get","fetchOldEvents","fetchAPIEvents","key","createEvent","newEvent","post","updateEvent","id","updatedEvent","patch","deleteEvent","delete","deleteParticipant","parts","participateEvent","participant","subscribe","email","confirmSignup","token","confirmUnsub","postNews","data","getNews","ValidateSignup","useState","wait","setWait","success","setSuccess","message","setMessage","dispatch","useDispatch","location","useLocation","useParams","useEffect","URLSearchParams","search","call","a","api","res","response","status","request","callbackFunc","Container","style","display","justifyContent","height","alignSelf","maxWidth","Grow","in","CircularProgress","Card","Typography","margin","textAlign","ValidateUnsub","ValidateMaster","path","useRouteMatch","component"],"mappings":"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","file":"static/js/9.f5c93683.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nconst url = 'https://vilkkoni-server.herokuapp.com/events';\r\nconst user_url = 'https://vilkkoni-server.herokuapp.com/user';\r\nconst validate_url = 'https://vilkkoni-server.herokuapp.com/validate';\r\nconst sub_url = 'https://vilkkoni-server.herokuapp.com/sub';\r\n\r\nexport const fetchEvents = () => axios.get(url);\r\nexport const fetchOldEvents = () => axios.get(`${url}/old`);\r\nexport const fetchAPIEvents = (key) => axios.get(`${user_url}/${key}/events`);\r\nexport const createEvent = (key, newEvent) => axios.post(`${user_url}/${key}/events`, newEvent);\r\nexport const updateEvent = (key, id, updatedEvent) => axios.patch(`${user_url}/${key}/events/${id}`, updatedEvent);\r\nexport const deleteEvent = (key, id) => axios.delete(`${user_url}/${key}/events/${id}`);\r\nexport const deleteParticipant = (key, id, parts) => axios.patch(`${user_url}/${key}/events/${id}/signups`, parts);\r\nexport const participateEvent = (id, participant) => axios.post(`${url}/${id}/eventsignup`, participant);\r\nexport const subscribe = (email) => axios.post(`${sub_url}/subscribe`, email);\r\nexport const confirmSignup = (id, token) => axios.post(`${validate_url}/signup/${id}`, {key: token});\r\nexport const confirmUnsub = (token, email) => axios.post(`${validate_url}/unsub/${token}`);\r\n\r\nexport const postNews = (key, data) => axios.post(`${user_url}/${key}/news`, data) \r\nexport const getNews = (key) => axios.get(`${user_url}/${key}/news`) ","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Card, CircularProgress, Container, Grow, Typography } from '@material-ui/core';\r\nimport { useParams, useLocation, Switch, Route, useRouteMatch } from 'react-router';\r\nimport { confirmSignup, confirmUnsub } from '../../actions/validation';\r\n\r\n\r\nconst ValidateSignup = () => {\r\n    const [wait, setWait] = useState(true);\r\n    const [success, setSuccess] = useState(false);\r\n    const [message, setMessage] = useState(\"\");\r\n    const dispatch = useDispatch()\r\n    const location = useLocation();\r\n    const { id } = useParams();\r\n\r\n    useEffect(()=>{\r\n        const token = new URLSearchParams(location.search).get(\"token\");\r\n        if (id && token) dispatch(confirmSignup(id, token, callbackFunc))\r\n    }, [id, dispatch, location.search]);\r\n\r\n    const callbackFunc = (res) => {\r\n        setWait(false);\r\n        setMessage(res.data.message);\r\n        if (res.status === 200) setSuccess(true);\r\n    }\r\n\r\n    return (\r\n        <Container style={{display: 'flex', justifyContent: 'center', height: '90vh'}}>\r\n            <div style={{alignSelf: 'center', maxWidth: '50%'}}>\r\n                <Grow in={wait}>\r\n                    <div style={{display: 'flex', justifyContent: 'center'}}>\r\n                        <CircularProgress style={{alignSelf: 'center'}} />\r\n                    </div>\r\n                </Grow>\r\n                <Grow in={!wait}>\r\n                    <Card>\r\n                    {success ? (\r\n                        <div>\r\n                            <Typography style={{margin: '2rem 3rem 0', textAlign: 'center'}}>\r\n                                SUCCESS\r\n                            </Typography>\r\n                            <Typography style={{margin: '2rem', textAlign: 'center'}}>\r\n                                Thank you for confirming your participation \r\n                            </Typography>\r\n                        </div>\r\n                    ) : (\r\n                        <div>\r\n                            <Typography style={{margin: '2rem 3rem 0', textAlign: 'center'}}>\r\n                                FAILURE\r\n                            </Typography>\r\n                            <Typography style={{margin: '2rem', textAlign: 'center'}}>\r\n                                {message}\r\n                            </Typography>\r\n                        </div>\r\n                    )}\r\n                    </Card>\r\n                </Grow>\r\n            </div>\r\n        </Container>\r\n    )\r\n};\r\n\r\nconst ValidateUnsub = () => {\r\n    const [wait, setWait] = useState(true);\r\n    const [success, setSuccess] = useState(false);\r\n    const [message, setMessage] = useState(\"\");\r\n    const dispatch = useDispatch()\r\n    const { token } = useParams();\r\n\r\n    useEffect(()=>{\r\n        if (token) dispatch(confirmUnsub(token, callbackFunc))\r\n    }, [token, dispatch]);\r\n\r\n    const callbackFunc = (res) => {\r\n        setWait(false);\r\n        setMessage(res.data.message);\r\n        if (res.status === 200) setSuccess(true);\r\n    }\r\n\r\n    return (\r\n        <Container style={{display: 'flex', justifyContent: 'center', height: '90vh'}}>\r\n            <div style={{alignSelf: 'center', maxWidth: '50%'}}>\r\n                <Grow in={wait}>\r\n                    <div style={{display: 'flex', justifyContent: 'center'}}>\r\n                        <CircularProgress style={{alignSelf: 'center'}} />\r\n                    </div>\r\n                </Grow>\r\n                <Grow in={!wait}>\r\n                    <Card>\r\n                    {success ? (\r\n                        <div>\r\n                            <Typography style={{margin: '2rem 3rem 0', textAlign: 'center'}}>\r\n                                SUCCESS\r\n                            </Typography>\r\n                            <Typography style={{margin: '2rem', textAlign: 'center'}}>\r\n                                You are now unsubscribed and will no longer receive newsletter emails.\r\n                            </Typography>\r\n                        </div>\r\n                    ) : (\r\n                        <div>\r\n                            <Typography style={{margin: '2rem 3rem 0', textAlign: 'center'}}>\r\n                                FAILURE\r\n                            </Typography>\r\n                            <Typography style={{margin: '2rem', textAlign: 'center'}}>\r\n                                {message}\r\n                            </Typography>\r\n                        </div>\r\n                    )}\r\n                    </Card>\r\n                </Grow>\r\n            </div>\r\n        </Container>\r\n    )\r\n}\r\n\r\nconst ValidateMaster = () => {\r\n    let { path } = useRouteMatch();\r\n\r\n    return (\r\n        <Switch>\r\n            <Route path={`${path}/signup/:id`} component={ValidateSignup} />\r\n            <Route path={`${path}/unsubscribe/:token`} component={ValidateUnsub} />\r\n        </Switch>\r\n    )\r\n}\r\n\r\nexport default ValidateMaster;","import * as api from '../api/index';\r\n\r\nexport const confirmSignup = (id, token, call) => async (dispatch) => {\r\n    try {\r\n        const res = await api.confirmSignup(id, token);\r\n        call(res);\r\n    } catch (error) {\r\n        if (error.response) {\r\n            call({status: error.response.status, data: error.response.data});\r\n        } else if (error.request) {\r\n            call({status: 400, data: {message: \"Invalid request, this probably was not your link\"}});\r\n        }\r\n    }\r\n}\r\n\r\nexport const confirmUnsub = (token, call) => async (dispatch) => {\r\n    try {\r\n        const res = await api.confirmUnsub(token);\r\n        call(res);\r\n    } catch (error) {\r\n        if (error.response) {\r\n            call({status: error.response.status, data: error.response.data});\r\n        } else if (error.request) {\r\n            call({status: 400, data: {message: \"Invalid request, this probably was not your link\"}});\r\n        }\r\n    }\r\n}"],"sourceRoot":""}